// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`69000ab0b0b0b0b060b0b0b07070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070305050407070707070707070707070707070707070707070707070707070707070707070b0606060606060606060b07070707070707070707070707070707070707070707070707070707070707070c1207070707070707070707070707070707070707030504070707070707070707070707070707070707070707070707070707070707070707070707070b06060606060606060606060b060b0b0707070707070707070707070707070707070707070707070707070c15151207070707070707070707070707070304070707070707070707070707070707070707070707070707070707070707070707070707070b0b060b0b0b060606060606060606060606060606060b0707070707070707070707070707070707070707070707070c0e1616101207070707070707070709030606060606060606060606060606060606060604070707170707070707070b0707070707070707070b06060606060606060606060606060606060606060606060b07070707070707070a07070707070707070707070707070d0f141411130707070707020101010101010101010101010101010101010101010101010101010101010101080808080808080101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101`, img`
.................................................................................2.......................
.................................................................................2.......................
.................................................................................2.......................
.................................................................................2.......................
.......................22.............................22222.222..................2.......................
.................2222................................2.........2.................2.......................
............222.....................................2...........2.22.............2.......................
........22.....................................22.222................2...........2.......................
.....2...................2..........2.........2.......................2..........2.......................
222222222222222222222222222222222.......22222222222222222222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,sprites.castle.tilePath2,sprites.castle.tilePath1,sprites.builtin.forestTiles21,sprites.builtin.forestTiles23,sprites.builtin.forestTiles22,sprites.dungeon.hazardLava1,sprites.builtin.brick,sprites.swamp.swampTile7,myTiles.tile1,myTiles.tile2,sprites.builtin.forestTiles0,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleInnerNorthWest,sprites.dungeon.purpleInnerSouthWest,sprites.dungeon.purpleInnerNorthEast,sprites.dungeon.purpleInnerSouthEast,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.purpleOuterSouthWest,sprites.dungeon.stairNorth,sprites.dungeon.purpleOuterNorth2,myTiles.tile6,myTiles.tile5], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`0a000a000209090b0b090b090903060b0a0b0b0a0b0a0b07060b0a0b0b0a0a0a0b07060b0a0b0b0a0b0a0b07060b0a0a0a0a0a0a0b07060b0b0b0a0b0b0b0b07060a0a0b0a0b0b0a0a07060b0a0b0a0b0b0a0b07060b0a0b0b0b0b0a0b07040b0808010b0b080b05`, img`
. . . 2 2 . 2 . . . 
. 2 . 2 2 . 2 . 2 . 
. 2 . 2 2 . . . 2 . 
. 2 . 2 2 . 2 . 2 . 
. 2 . . . . . . 2 . 
. 2 2 2 . 2 2 2 2 . 
. . . 2 . 2 2 . . . 
. 2 . 2 . 2 2 . 2 . 
. 2 . 2 2 2 2 . 2 . 
. 2 . . . 2 2 . 2 . 
`, [myTiles.transparency16,myTiles.tile4,sprites.dungeon.darkGroundNorthWest0,sprites.dungeon.darkGroundNorthEast0,sprites.dungeon.darkGroundSouthWest0,sprites.dungeon.darkGroundSouthEast0,sprites.dungeon.darkGroundWest,sprites.dungeon.darkGroundEast,sprites.dungeon.darkGroundSouth,sprites.dungeon.darkGroundNorth,sprites.dungeon.darkGroundCenter,myTiles.tile7], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile":
            case "tile1":return tile1;
            case "myTile4":
            case "tile6":return tile6;
            case "myTile3":
            case "tile5":return tile5;
            case "myTile2":
            case "tile4":return tile4;
            case "myTile5":
            case "tile7":return tile7;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
